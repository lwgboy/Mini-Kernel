<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE xml>
<!--设置log4j2的自身log级别为warn-->
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，
    当设置成trace时，你会看到log4j2内部各种详细输出  packages="com.zero.scribe.log4j2plugin"-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<configuration status="error">
	<Properties>
		<!-- 日志格式 -->
		<!-- [时间]#[项目信息]#[等级]#[类全名.方法名.行数]#[线程名]#ThreadContextStack#[ThreadContextMap]#信息 -->
		<!-- #[%c][%M]#%m%n -->
		<Property name="formate">
			%d{yyyy.MM.dd HH:mm:ss} %5p %c{1}(%L):? %m%n
		</Property>
		<!-- 日志路径 -->
		<property name="LOG_HOME">
			/var/log/gcloud/
		</property>
		<!-- 文件大小限制 -->
		<property name="MAX_FILE_SIZE">
			100MB
		</property>
		<!-- 文件数量限制 -->
		<property name="MAX_BACKUP">
			60
		</property>
		<property name="GCLOUD_LOG_LEVEL">error</property>
		<!-- 日志名称 -->
		<Property name="gcloudName">gcloud</Property>
		<Property name="workflowName">workflow</Property>
		<Property name="controllerName">controller</Property>
        <Property name="computeName">compute</Property>
        <Property name="storageName">storage</Property>
	</Properties>
	<Appenders>
	<!-- Appender类：决定日志去向，终端、DB、硬盘 -->
	<!-- ${LOG_HOME}/$${date:yyyy-MM}/${logName}-%d{MM-dd-yyyy}-%i.log.gz
	       。gz结尾 历史日志会自动压缩
	  $${date:yyyy-MM}历史记录会按月归档
	  ${logName}-%d{MM-dd-yyyy}-%i.log 日志按天和按大小划分，%i 自增的index
	  解压： gzip -d identity-04-07-2016-6.log.gz
	  -->
	    <!--这个输出控制台的配置-->
        <console name="Console" target="SYSTEM_OUT">
            <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>
        </console>

		<RollingFile name="${gcloudName}Appender" fileName="${LOG_HOME}/${gcloudName}.log"
					 filePattern="${LOG_HOME}/$${date:yyyy-MM}/${gcloudName}-%d{MM-dd-yyyy}-%i.log.gz">
			<!-- Layout类：决定日志输出的样式，例如包含当前线程、行号、时间 -->
			<PatternLayout pattern="${formate}" />
			<Policies>
				<!-- <OnStartupTriggeringPolicy /> -->
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="${MAX_FILE_SIZE}" />
			</Policies>
			<!-- 保留文件数 -->
			<DefaultRolloverStrategy>
				<Delete basePath="${LOG_HOME}" maxDepth="2">
					<IfFileName glob="*/${gcloudName}-*.log.gz" />
					<!-- <IfLastModified age="30d" /> --><!-- 按修改时间来限制，30d 30天前 -->
					<IfAccumulatedFileCount exceeds="${MAX_BACKUP}"/>
				</Delete>
			</DefaultRolloverStrategy>
		</RollingFile>

		<RollingFile name="${workflowName}Appender" fileName="${LOG_HOME}/${workflowName}.log"
			filePattern="${LOG_HOME}/$${date:yyyy-MM}/${workflowName}-%d{MM-dd-yyyy}-%i.log.gz">
			<!-- Layout类：决定日志输出的样式，例如包含当前线程、行号、时间 -->
			<PatternLayout pattern="${formate}" />
			<Policies>
				<!-- <OnStartupTriggeringPolicy /> -->
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="${MAX_FILE_SIZE}" />
			</Policies>
			<!-- 保留文件数 -->
			<DefaultRolloverStrategy>
				<Delete basePath="${LOG_HOME}" maxDepth="2">
		          <IfFileName glob="*/${workflowName}-*.log.gz" />
		          <!-- <IfLastModified age="30d" /> --><!-- 按修改时间来限制，30d 30天前 -->
		          <IfAccumulatedFileCount exceeds="${MAX_BACKUP}"/>
		        </Delete>
			</DefaultRolloverStrategy>
			
			<!-- 如果需要按日志级别分开记录，可添加以下filters来实现 ,一个文件只能选择一组Filters-->
			<!-- trace/debug级别的日志 -->
			<!-- 
			<Filters>  
                <ThresholdFilter level="info" onMatch="DENY" onMismatch="NEUTRAL"/>  
                <ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="NEUTRAL"/>  
            </Filters>
             -->
             <!-- info级别 -->
             <!-- 
             <Filters>  
                <ThresholdFilter level="warn" onMatch="DENY" onMismatch="NEUTRAL"/>  
                <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>  
            </Filters>
             -->
             <!-- warn/error/fatal级别 -->
             <!-- 
             <Filters>   
                <ThresholdFilter level="warn" onMatch="ACCEPT" onMismatch="DENY"/>   
            </Filters> 
             -->
		</RollingFile>
		<RollingFile name="${controllerName}Appender" fileName="${LOG_HOME}/${controllerName}.log"
			filePattern="${LOG_HOME}/$${date:yyyy-MM}/${controllerName}-%d{MM-dd-yyyy}-%i.log.gz">
			<!-- Layout类：决定日志输出的样式，例如包含当前线程、行号、时间 -->
			<PatternLayout pattern="${formate}" />
			<Policies>
				<!-- <OnStartupTriggeringPolicy /> -->
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="${MAX_FILE_SIZE}" />
			</Policies>
			<!-- 保留文件数 -->
			<DefaultRolloverStrategy>
				<Delete basePath="${LOG_HOME}" maxDepth="2">
		          <IfFileName glob="*/${controllerName}-*.log.gz" />
		          <!-- <IfLastModified age="30d" /> --><!-- 按修改时间来限制，30d 30天前 -->
		          <IfAccumulatedFileCount exceeds="${MAX_BACKUP}"/>
		        </Delete>
			</DefaultRolloverStrategy>
		</RollingFile>
        <RollingFile name="${computeName}Appender" fileName="${LOG_HOME}/${computeName}.log"
          filePattern="${LOG_HOME}/$${date:yyyy-MM}/${computeName}-%d{MM-dd-yyyy}-%i.log.gz">
          <!-- Layout类：决定日志输出的样式，例如包含当前线程、行号、时间 -->
          <PatternLayout pattern="${formate}" />
          <Policies>
            <!-- <OnStartupTriggeringPolicy /> -->
            <TimeBasedTriggeringPolicy />
            <SizeBasedTriggeringPolicy size="${MAX_FILE_SIZE}" />
          </Policies>
          <!-- 保留文件数 -->
          <DefaultRolloverStrategy>
            <Delete basePath="${LOG_HOME}" maxDepth="2">
                  <IfFileName glob="*/${computeName}-*.log.gz" />
                  <!-- <IfLastModified age="30d" /> --><!-- 按修改时间来限制，30d 30天前 -->
                  <IfAccumulatedFileCount exceeds="${MAX_BACKUP}"/>
                </Delete>
          </DefaultRolloverStrategy>
        </RollingFile>
        <RollingFile name="${storageName}Appender" fileName="${LOG_HOME}/${storageName}.log"
          filePattern="${LOG_HOME}/$${date:yyyy-MM}/${storageName}-%d{MM-dd-yyyy}-%i.log.gz">
          <!-- Layout类：决定日志输出的样式，例如包含当前线程、行号、时间 -->
          <PatternLayout pattern="${formate}" />
          <Policies>
            <!-- <OnStartupTriggeringPolicy /> -->
            <TimeBasedTriggeringPolicy />
            <SizeBasedTriggeringPolicy size="${MAX_FILE_SIZE}" />
          </Policies>
          <!-- 保留文件数 -->
          <DefaultRolloverStrategy>
            <Delete basePath="${LOG_HOME}" maxDepth="2">
                  <IfFileName glob="*/${storageName}-*.log.gz" />
                  <!-- <IfLastModified age="30d" /> --><!-- 按修改时间来限制，30d 30天前 -->
                  <IfAccumulatedFileCount exceeds="${MAX_BACKUP}"/>
                </Delete>
          </DefaultRolloverStrategy>
        </RollingFile>
	</Appenders>
	<!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
	<Loggers>
		<!-- Logger类：完成日志记录，设置日志信息级别 -->
		<Logger name="com.gcloud" level="${sys:GCLOUD_LOG_LEVEL}" additivity="false">
			<appender-ref ref="${gcloudName}Appender"/>
		</Logger>
		<Logger name="com.gcloud.framework.db.rowmapper" level="error" additivity="false">
			<appender-ref ref="${gcloudName}Appender"/>
			<appender-ref ref="${controllerName}Appender"/>
		</Logger>
		<Logger name="com.gcloud.core.workflow" level="${sys:GCLOUD_LOG_LEVEL}" additivity="false">
			<appender-ref ref="${gcloudName}Appender"/>
			<AppenderRef ref="${workflowName}Appender" />
		</Logger>
		<Logger name="com.gcloud.controller" level="${sys:GCLOUD_LOG_LEVEL}" additivity="false">
			<appender-ref ref="${gcloudName}Appender"/>
			<AppenderRef ref="${controllerName}Appender" />
		</Logger>
        <Logger name="com.gcloud.compute" level="${sys:GCLOUD_LOG_LEVEL}" additivity="false">
			<appender-ref ref="${gcloudName}Appender"/>
            <AppenderRef ref="${computeName}Appender" />
        </Logger>
        <Logger name="com.gcloud.storage" level="${sys:GCLOUD_LOG_LEVEL}" additivity="false">
			<appender-ref ref="${gcloudName}Appender"/>
            <AppenderRef ref="${storageName}Appender" />
        </Logger>
		<Root level="info">
			<appender-ref ref="${gcloudName}Appender"/>
        </Root>
	</Loggers>
</configuration>